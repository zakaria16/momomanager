plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 30
        versionCode lib_version_code
        versionName lib_version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        buildTypes.each {
            it.buildConfigField 'String', 'VERSION_NAME', '"'+lib_version_name+'"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'

    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

//apply plugin: 'maven-publish'
//
///**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
//def githubProperties = new Properties()
//githubProperties.load(new FileInputStream(rootProject.file("github.properties")))
//
//
def getVersionName = { ->

    return  "1.0.0" // Replace with version Name
}
//
//def getArtificatId = { ->
//    return "momomanager" // Replace with library name ID
//}
//
//publishing {
//    publications {
//        bar(MavenPublication) {
//            groupId 'com.mazitekgh'
//            artifactId getArtificatId()
//            version getVersionName()
//            artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
//        }
//    }
//
//    repositories {
//        maven {
//            name = "GitHubPackages"
//            /** Configure path of your package repository on Github
//             *  Replace GITHUB_USERID with your/organisation Github userID and REPOSITORY with the repository name on GitHub
//             */
//            url = uri("https://maven.pkg.github.com/zakaria16/momomanager")
//
//            credentials {
//                /**Create github.properties in root project folder file with gpr.usr=GITHUB_USER_ID  & gpr.key=PERSONAL_ACCESS_TOKEN**/
//                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
//                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
//            }
//        }
//    }
//}


// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.mazitekgh'
                artifactId = 'momomanager'
                version = getVersionName()
                //artifact("$buildDir/outputs/aar/momomanager-release.aar")
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug
                groupId = 'com.mazitekgh'
                artifactId = 'momomanger'
                version = getVersionName()
                //artifact("$buildDir/outputs/aar/momomanager-debug.aar")
            }


        }
    }
}



